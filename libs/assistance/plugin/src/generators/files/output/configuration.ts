const current = {
  name: '@wrkspce',
  configType: 'workspace',
  children: [
    {
      name: 'assistance-feature-workspace',
      configType: 'library',
      fields: [
        {
          name: 'name',
          value: 'assistance-feature-workspace',
          required: true,
          type: 'input',
          label: 'Name',
        },
        {
          name: 'scope',
          value: 'assistance',
          required: true,
          type: 'input',
          label: 'Scope',
        },
        {
          name: 'type',
          value: 'feature',
          required: true,
          type: 'input',
          label: 'Type',
        },
        {
          name: 'importPath',
          value: '@wrkspce/assistance/feature/workspace',
          required: true,
          type: 'input',
          label: 'Import Path',
        },
        {
          name: 'generatorScript',
          value:
            'nx g @nx/next:library --name=assistance-feature-workspace --bundler=rollup --directory=libs/assistance/feature/workspace --importPath=@wrkspce/assistance/feature/workspace --projectNameAndRootFormat=as-provided --publishable=true --tags="scope:assistance, type:feature" --unitTestRunner=jest',
          required: true,
          type: 'input',
          label: 'Generator Script',
        },
      ],
      dependencies: [
        {
          source: 'assistance-feature-workspace',
          target: 'npm:@nx/devkit',
          type: 'static',
        },
        {
          source: 'assistance-feature-workspace',
          target: 'npm:server-only',
          type: 'static',
        },
        {
          source: 'assistance-feature-workspace',
          target: 'npm:ai',
          type: 'static',
        },
        {
          source: 'assistance-feature-workspace',
          target: 'assistance-ui-stocks',
          type: 'static',
        },
        {
          source: 'assistance-feature-workspace',
          target: 'assistance-feature-ai',
          type: 'static',
        },
        {
          source: 'assistance-feature-workspace',
          target: 'shared-ui',
          type: 'static',
        },
        {
          source: 'assistance-feature-workspace',
          target: 'shared-feature-diagram',
          type: 'static',
        },
        {
          source: 'assistance-feature-workspace',
          target: 'shared-util',
          type: 'static',
        },
        {
          source: 'assistance-feature-workspace',
          target: 'assistance-util',
          type: 'static',
        },
        {
          source: 'assistance-feature-workspace',
          target: 'npm:zod',
          type: 'static',
        },
        {
          source: 'assistance-feature-workspace',
          target: 'npm:react',
          type: 'static',
        },
        {
          source: 'assistance-feature-workspace',
          target: 'shared-feature-form',
          type: 'static',
        },
        {
          source: 'assistance-feature-workspace',
          target: 'npm:@radix-ui/themes',
          type: 'static',
        },
      ],
    },
    {
      name: 'assistance-feature-persona',
      configType: 'library',
      fields: [
        {
          name: 'name',
          value: 'assistance-feature-persona',
          required: true,
          type: 'input',
          label: 'Name',
        },
        {
          name: 'scope',
          value: 'assistance',
          required: true,
          type: 'input',
          label: 'Scope',
        },
        {
          name: 'type',
          value: 'feature',
          required: true,
          type: 'input',
          label: 'Type',
        },
        {
          name: 'importPath',
          value: '@wrkspce/assistance/feature/persona',
          required: true,
          type: 'input',
          label: 'Import Path',
        },
        {
          name: 'generatorScript',
          value:
            'nx g @nx/next:library --name=assistance-feature-persona --bundler=rollup --directory=libs/assistance/feature/persona --importPath=@wrkspce/assistance/feature/persona --projectNameAndRootFormat=as-provided --publishable=true --tags="scope:assistance, type:feature" --unitTestRunner=jest',
          required: true,
          type: 'input',
          label: 'Generator Script',
        },
      ],
      dependencies: [
        {
          source: 'assistance-feature-persona',
          target: 'npm:@testing-library/react',
          type: 'static',
        },
        {
          source: 'assistance-feature-persona',
          target: 'npm:ai',
          type: 'static',
        },
        {
          source: 'assistance-feature-persona',
          target: 'shared-util',
          type: 'static',
        },
        {
          source: 'assistance-feature-persona',
          target: 'shared-feature-avatar',
          type: 'static',
        },
        {
          source: 'assistance-feature-persona',
          target: 'assistance-feature-ai',
          type: 'static',
        },
        {
          source: 'assistance-feature-persona',
          target: 'assistance-util',
          type: 'static',
        },
        {
          source: 'assistance-feature-persona',
          target: 'npm:zod',
          type: 'static',
        },
        {
          source: 'assistance-feature-persona',
          target: 'shared-ui',
          type: 'static',
        },
        {
          source: 'assistance-feature-persona',
          target: 'assistance-ui-persona',
          type: 'static',
        },
      ],
    },
    {
      name: 'assistance-feature-stocks',
      configType: 'library',
      fields: [
        {
          name: 'name',
          value: 'assistance-feature-stocks',
          required: true,
          type: 'input',
          label: 'Name',
        },
        {
          name: 'scope',
          value: 'assistance',
          required: true,
          type: 'input',
          label: 'Scope',
        },
        {
          name: 'type',
          value: 'feature',
          required: true,
          type: 'input',
          label: 'Type',
        },
        {
          name: 'importPath',
          value: '@wrkspce/assistance/feature/stocks',
          required: true,
          type: 'input',
          label: 'Import Path',
        },
        {
          name: 'generatorScript',
          value:
            'nx g @nx/next:library --name=assistance-feature-stocks --bundler=rollup --directory=libs/assistance/feature/stocks --importPath=@wrkspce/assistance/feature/stocks --projectNameAndRootFormat=as-provided --publishable=true --tags="scope:assistance, type:feature" --unitTestRunner=jest',
          required: true,
          type: 'input',
          label: 'Generator Script',
        },
      ],
      dependencies: [
        {
          source: 'assistance-feature-stocks',
          target: 'npm:server-only',
          type: 'static',
        },
        {
          source: 'assistance-feature-stocks',
          target: 'npm:ai',
          type: 'static',
        },
        {
          source: 'assistance-feature-stocks',
          target: 'assistance-ui-stocks',
          type: 'static',
        },
        {
          source: 'assistance-feature-stocks',
          target: 'assistance-feature-ai',
          type: 'static',
        },
        {
          source: 'assistance-feature-stocks',
          target: 'shared-util',
          type: 'static',
        },
        {
          source: 'assistance-feature-stocks',
          target: 'npm:zod',
          type: 'static',
        },
      ],
    },
    {
      name: 'assistance-ui-workspace',
      configType: 'library',
      fields: [
        {
          name: 'name',
          value: 'assistance-ui-workspace',
          required: true,
          type: 'input',
          label: 'Name',
        },
        {
          name: 'scope',
          value: 'assistance',
          required: true,
          type: 'input',
          label: 'Scope',
        },
        {
          name: 'type',
          value: 'ui',
          required: true,
          type: 'input',
          label: 'Type',
        },
        {
          name: 'importPath',
          value: '@wrkspce/assistance/ui/workspace',
          required: true,
          type: 'input',
          label: 'Import Path',
        },
        {
          name: 'generatorScript',
          value:
            'nx g @nx/react:library --name=assistance-ui-workspace --bundler=rollup --directory=libs/assistance/ui/workspace --importPath=@wrkspce/assistance/ui/workspace --projectNameAndRootFormat=as-provided --publishable=true --tags="scope:assistance, type:ui" --unitTestRunner=jest',
          required: true,
          type: 'input',
          label: 'Generator Script',
        },
      ],
      dependencies: [
        {
          source: 'assistance-ui-workspace',
          target: 'npm:@testing-library/react',
          type: 'static',
        },
      ],
    },
    {
      name: 'shared-feature-diagram',
      configType: 'library',
      fields: [
        {
          name: 'name',
          value: 'shared-feature-diagram',
          required: true,
          type: 'input',
          label: 'Name',
        },
        {
          name: 'scope',
          value: 'shared',
          required: true,
          type: 'input',
          label: 'Scope',
        },
        {
          name: 'type',
          value: 'feature',
          required: true,
          type: 'input',
          label: 'Type',
        },
        {
          name: 'importPath',
          value: '@wrkspce/shared/feature/diagram',
          required: true,
          type: 'input',
          label: 'Import Path',
        },
        {
          name: 'generatorScript',
          value:
            'nx g @nx/next:library --name=shared-feature-diagram --bundler=rollup --directory=libs/shared/feature/diagram --importPath=@wrkspce/shared/feature/diagram --projectNameAndRootFormat=as-provided --publishable=true --tags="scope:shared, type:feature" --unitTestRunner=jest',
          required: true,
          type: 'input',
          label: 'Generator Script',
        },
      ],
      dependencies: [
        {
          source: 'shared-feature-diagram',
          target: 'npm:react',
          type: 'static',
        },
        {
          source: 'shared-feature-diagram',
          target: 'npm:mermaid',
          type: 'static',
        },
      ],
    },
    {
      name: 'assistance-feature-ai',
      configType: 'library',
      fields: [
        {
          name: 'name',
          value: 'assistance-feature-ai',
          required: true,
          type: 'input',
          label: 'Name',
        },
        {
          name: 'scope',
          value: 'assistance',
          required: true,
          type: 'input',
          label: 'Scope',
        },
        {
          name: 'type',
          value: 'feature',
          required: true,
          type: 'input',
          label: 'Type',
        },
        {
          name: 'importPath',
          value: '@wrkspce/assistance/feature/ai',
          required: true,
          type: 'input',
          label: 'Import Path',
        },
        {
          name: 'generatorScript',
          value:
            'nx g @nx/next:library --name=assistance-feature-ai --bundler=rollup --directory=libs/assistance/feature/ai --importPath=@wrkspce/assistance/feature/ai --projectNameAndRootFormat=as-provided --publishable=true --tags="scope:assistance, type:feature" --unitTestRunner=jest',
          required: true,
          type: 'input',
          label: 'Generator Script',
        },
      ],
      dependencies: [
        {
          source: 'assistance-feature-ai',
          target: 'npm:react',
          type: 'static',
        },
        { source: 'assistance-feature-ai', target: 'npm:zod', type: 'static' },
        {
          source: 'assistance-feature-ai',
          target: 'npm:openai',
          type: 'static',
        },
        { source: 'assistance-feature-ai', target: 'npm:ai', type: 'static' },
        {
          source: 'assistance-feature-ai',
          target: 'assistance-util',
          type: 'static',
        },
        {
          source: 'assistance-feature-ai',
          target: 'npm:server-only',
          type: 'static',
        },
      ],
    },
    {
      name: 'assistance-ui-persona',
      configType: 'library',
      fields: [
        {
          name: 'name',
          value: 'assistance-ui-persona',
          required: true,
          type: 'input',
          label: 'Name',
        },
        {
          name: 'scope',
          value: 'assistance',
          required: true,
          type: 'input',
          label: 'Scope',
        },
        {
          name: 'type',
          value: 'ui',
          required: true,
          type: 'input',
          label: 'Type',
        },
        {
          name: 'importPath',
          value: '@wrkspce/assistance/ui/persona',
          required: true,
          type: 'input',
          label: 'Import Path',
        },
        {
          name: 'generatorScript',
          value:
            'nx g @nx/react:library --name=assistance-ui-persona --bundler=rollup --directory=libs/assistance/ui/persona --importPath=@wrkspce/assistance/ui/persona --projectNameAndRootFormat=as-provided --publishable=true --tags="scope:assistance, type:ui" --unitTestRunner=jest',
          required: true,
          type: 'input',
          label: 'Generator Script',
        },
      ],
      dependencies: [
        { source: 'assistance-ui-persona', target: 'npm:ai', type: 'static' },
        {
          source: 'assistance-ui-persona',
          target: 'npm:react',
          type: 'static',
        },
        {
          source: 'assistance-ui-persona',
          target: 'shared-feature-avatar',
          type: 'static',
        },
      ],
    },
    {
      name: 'shared-feature-avatar',
      configType: 'library',
      fields: [
        {
          name: 'name',
          value: 'shared-feature-avatar',
          required: true,
          type: 'input',
          label: 'Name',
        },
        {
          name: 'scope',
          value: 'shared',
          required: true,
          type: 'input',
          label: 'Scope',
        },
        {
          name: 'type',
          value: 'feature',
          required: true,
          type: 'input',
          label: 'Type',
        },
        {
          name: 'importPath',
          value: '@wrkspce/shared/feature/avatar',
          required: true,
          type: 'input',
          label: 'Import Path',
        },
        {
          name: 'generatorScript',
          value:
            'nx g @nx/next:library --name=shared-feature-avatar --bundler=rollup --directory=libs/shared/feature/avatar --importPath=@wrkspce/shared/feature/avatar --projectNameAndRootFormat=as-provided --publishable=true --tags="scope:shared, type:feature" --unitTestRunner=jest',
          required: true,
          type: 'input',
          label: 'Generator Script',
        },
      ],
      dependencies: [
        {
          source: 'shared-feature-avatar',
          target: 'npm:@radix-ui/react-icons',
          type: 'static',
        },
        {
          source: 'shared-feature-avatar',
          target: 'npm:@radix-ui/themes',
          type: 'static',
        },
        {
          source: 'shared-feature-avatar',
          target: 'npm:react',
          type: 'static',
        },
        {
          source: 'shared-feature-avatar',
          target: 'npm:@testing-library/react',
          type: 'static',
        },
        {
          source: 'shared-feature-avatar',
          target: 'npm:@testing-library/jest-dom',
          type: 'static',
        },
      ],
    },
    {
      name: 'assistance-ui-stocks',
      configType: 'library',
      fields: [
        {
          name: 'name',
          value: 'assistance-ui-stocks',
          required: true,
          type: 'input',
          label: 'Name',
        },
        {
          name: 'scope',
          value: 'assistance',
          required: true,
          type: 'input',
          label: 'Scope',
        },
        {
          name: 'type',
          value: 'ui',
          required: true,
          type: 'input',
          label: 'Type',
        },
        {
          name: 'importPath',
          value: '@wrkspce/assistance/ui/stocks',
          required: true,
          type: 'input',
          label: 'Import Path',
        },
        {
          name: 'generatorScript',
          value:
            'nx g @nx/react:library --name=assistance-ui-stocks --bundler=rollup --directory=libs/assistance/ui/stocks --importPath=@wrkspce/assistance/ui/stocks --projectNameAndRootFormat=as-provided --publishable=true --tags="scope:assistance, type:ui" --unitTestRunner=jest',
          required: true,
          type: 'input',
          label: 'Generator Script',
        },
      ],
      dependencies: [
        { source: 'assistance-ui-stocks', target: 'shared-ui', type: 'static' },
        {
          source: 'assistance-ui-stocks',
          target: 'npm:date-fns',
          type: 'static',
        },
        { source: 'assistance-ui-stocks', target: 'npm:next', type: 'static' },
        {
          source: 'assistance-ui-stocks',
          target: 'shared-util',
          type: 'static',
        },
        { source: 'assistance-ui-stocks', target: 'npm:react', type: 'static' },
        { source: 'assistance-ui-stocks', target: 'npm:ai', type: 'static' },
        {
          source: 'assistance-ui-stocks',
          target: 'assistance-feature-ai',
          type: 'static',
        },
        {
          source: 'assistance-ui-stocks',
          target: 'npm:d3-scale',
          type: 'static',
        },
        {
          source: 'assistance-ui-stocks',
          target: 'npm:usehooks-ts',
          type: 'static',
        },
      ],
    },
    {
      name: 'shared-feature-form',
      configType: 'library',
      fields: [
        {
          name: 'name',
          value: 'shared-feature-form',
          required: true,
          type: 'input',
          label: 'Name',
        },
        {
          name: 'scope',
          value: 'shared',
          required: true,
          type: 'input',
          label: 'Scope',
        },
        {
          name: 'type',
          value: 'feature',
          required: true,
          type: 'input',
          label: 'Type',
        },
        {
          name: 'importPath',
          value: '@wrkspce/shared/feature/form',
          required: true,
          type: 'input',
          label: 'Import Path',
        },
        {
          name: 'generatorScript',
          value:
            'nx g @nx/next:library --name=shared-feature-form --bundler=rollup --directory=libs/shared/feature/form --importPath=@wrkspce/shared/feature/form --projectNameAndRootFormat=as-provided --publishable=true --tags="scope:shared, type:feature" --unitTestRunner=jest',
          required: true,
          type: 'input',
          label: 'Generator Script',
        },
      ],
      dependencies: [
        {
          source: 'shared-feature-form',
          target: 'npm:@storybook/react-webpack5',
          type: 'static',
        },
        { source: 'shared-feature-form', target: 'npm:react', type: 'static' },
        {
          source: 'shared-feature-form',
          target: 'npm:@radix-ui/themes',
          type: 'static',
        },
        {
          source: 'shared-feature-form',
          target: 'npm:@storybook/react',
          type: 'static',
        },
        {
          source: 'shared-feature-form',
          target: 'npm:@testing-library/react',
          type: 'static',
        },
        {
          source: 'shared-feature-form',
          target: 'npm:@storybook/testing-library',
          type: 'static',
        },
        {
          source: 'shared-feature-form',
          target: 'npm:@storybook/jest',
          type: 'static',
        },
      ],
    },
    {
      name: 'assistance-ui-chat',
      configType: 'library',
      fields: [
        {
          name: 'name',
          value: 'assistance-ui-chat',
          required: true,
          type: 'input',
          label: 'Name',
        },
        {
          name: 'scope',
          value: 'assistance',
          required: true,
          type: 'input',
          label: 'Scope',
        },
        {
          name: 'type',
          value: 'ui',
          required: true,
          type: 'input',
          label: 'Type',
        },
        {
          name: 'importPath',
          value: '@wrkspce/assistance/ui/chat',
          required: true,
          type: 'input',
          label: 'Import Path',
        },
        {
          name: 'generatorScript',
          value:
            'nx g @nx/react:library --name=assistance-ui-chat --bundler=rollup --directory=libs/assistance/ui/chat --importPath=@wrkspce/assistance/ui/chat --projectNameAndRootFormat=as-provided --publishable=true --tags="scope:assistance, type:ui" --unitTestRunner=jest',
          required: true,
          type: 'input',
          label: 'Generator Script',
        },
      ],
      dependencies: [
        {
          source: 'assistance-ui-chat',
          target: 'npm:@testing-library/react',
          type: 'static',
        },
        { source: 'assistance-ui-chat', target: 'npm:react', type: 'static' },
        {
          source: 'assistance-ui-chat',
          target: 'npm:react-textarea-autosize',
          type: 'static',
        },
        { source: 'assistance-ui-chat', target: 'npm:ai', type: 'static' },
        {
          source: 'assistance-ui-chat',
          target: 'assistance-feature-ai',
          type: 'static',
        },
        { source: 'assistance-ui-chat', target: 'shared-ui', type: 'static' },
        {
          source: 'assistance-ui-chat',
          target: 'npm:@radix-ui/themes',
          type: 'static',
        },
        {
          source: 'assistance-ui-chat',
          target: 'shared-feature-avatar',
          type: 'static',
        },
        {
          source: 'assistance-ui-chat',
          target: 'npm:react-intersection-observer',
          type: 'static',
        },
      ],
    },
    {
      name: 'assistance-plugin',
      configType: 'library',
      fields: [
        {
          name: 'name',
          value: 'assistance-plugin',
          required: true,
          type: 'input',
          label: 'Name',
        },
        {
          name: 'scope',
          value: 'assistance',
          required: true,
          type: 'input',
          label: 'Scope',
        },
        {
          name: 'type',
          value: 'plugin',
          required: true,
          type: 'input',
          label: 'Type',
        },
        {
          name: 'importPath',
          value: '@wrkspce/assistance/plugin/plugin',
          required: true,
          type: 'input',
          label: 'Import Path',
        },
        {
          name: 'generatorScript',
          value:
            'nx g @nx/javascript:library --name=assistance-plugin --bundler=rollup --directory=libs/assistance/plugin/plugin --importPath=@wrkspce/assistance/plugin/plugin --projectNameAndRootFormat=as-provided --publishable=true --tags="scope:assistance, type:plugin" --unitTestRunner=jest',
          required: true,
          type: 'input',
          label: 'Generator Script',
        },
      ],
      dependencies: [
        {
          source: 'assistance-plugin',
          target: 'npm:@nx/devkit',
          type: 'static',
        },
        { source: 'assistance-plugin', target: 'npm:tslib', type: 'static' },
        {
          source: 'assistance-plugin',
          target: 'assistance-feature-workspace',
          type: 'static',
        },
      ],
    },
    {
      name: 'assistance-util',
      configType: 'library',
      fields: [
        {
          name: 'name',
          value: 'assistance-util',
          required: true,
          type: 'input',
          label: 'Name',
        },
        {
          name: 'scope',
          value: 'assistance',
          required: true,
          type: 'input',
          label: 'Scope',
        },
        {
          name: 'type',
          value: 'util',
          required: true,
          type: 'input',
          label: 'Type',
        },
        {
          name: 'importPath',
          value: '@wrkspce/assistance/util/util',
          required: true,
          type: 'input',
          label: 'Import Path',
        },
        {
          name: 'generatorScript',
          value:
            'nx g @nx/javascript:library --name=assistance-util --bundler=rollup --directory=libs/assistance/util/util --importPath=@wrkspce/assistance/util/util --projectNameAndRootFormat=as-provided --publishable=true --tags="scope:assistance, type:util" --unitTestRunner=jest',
          required: true,
          type: 'input',
          label: 'Generator Script',
        },
      ],
      dependencies: [
        { source: 'assistance-util', target: 'npm:zod', type: 'static' },
        { source: 'assistance-util', target: 'npm:ai', type: 'static' },
        { source: 'assistance-util', target: 'npm:openai', type: 'static' },
        {
          source: 'assistance-util',
          target: 'npm:zod-to-json-schema',
          type: 'static',
        },
      ],
    },
    {
      name: 'assistance-app',
      configType: 'app',
      fields: [
        {
          name: 'name',
          value: 'assistance-app',
          required: true,
          type: 'input',
          label: 'Name',
        },
        {
          name: 'scope',
          value: 'assistance',
          required: true,
          type: 'input',
          label: 'Scope',
        },
        {
          name: 'type',
          value: 'app',
          required: true,
          type: 'input',
          label: 'Type',
        },
        {
          name: 'importPath',
          value: '@wrkspce/assistance/app/app',
          required: true,
          type: 'input',
          label: 'Import Path',
        },
        {
          name: 'generatorScript',
          value:
            'nx g @nx/next:application --name=assistance-app --bundler=rollup --directory=libs/assistance/app/app --importPath=@wrkspce/assistance/app/app --projectNameAndRootFormat=as-provided --publishable=true --tags="scope:assistance, type:app" --unitTestRunner=jest',
          required: true,
          type: 'input',
          label: 'Generator Script',
        },
      ],
      dependencies: [
        { source: 'assistance-app', target: 'npm:@nx/next', type: 'static' },
        {
          source: 'assistance-app',
          target: 'assistance-feature-stocks',
          type: 'static',
        },
        {
          source: 'assistance-app',
          target: 'assistance-ui-chat',
          type: 'static',
        },
        {
          source: 'assistance-app',
          target: 'assistance-feature-workspace',
          type: 'static',
        },
        { source: 'assistance-app', target: 'npm:next', type: 'static' },
        {
          source: 'assistance-app',
          target: 'npm:@radix-ui/themes',
          type: 'static',
        },
        { source: 'assistance-app', target: 'npm:geist', type: 'static' },
        { source: 'assistance-app', target: 'shared-ui', type: 'static' },
        { source: 'assistance-app', target: 'npm:react', type: 'static' },
        { source: 'assistance-app', target: 'npm:next-themes', type: 'static' },
        {
          source: 'assistance-app',
          target: 'npm:@radix-ui/react-tooltip',
          type: 'static',
        },
        {
          source: 'assistance-app',
          target: 'npm:@testing-library/react',
          type: 'static',
        },
        {
          source: 'assistance-app',
          target: 'npm:@testing-library/jest-dom',
          type: 'static',
        },
        { source: 'assistance-app', target: 'npm:tailwindcss', type: 'static' },
        { source: 'assistance-app', target: 'npm:@nx/react', type: 'static' },
        {
          source: 'assistance-app',
          target: 'npm:radix-themes-tw',
          type: 'static',
        },
        {
          source: 'assistance-app',
          target: 'npm:tailwindcss-animate',
          type: 'static',
        },
      ],
    },
    {
      name: 'assistance-e2e',
      configType: 'library',
      fields: [
        {
          name: 'name',
          value: 'assistance-e2e',
          required: true,
          type: 'input',
          label: 'Name',
        },
        {
          name: 'scope',
          value: 'assistance',
          required: true,
          type: 'input',
          label: 'Scope',
        },
        {
          name: 'type',
          value: 'e2e',
          required: true,
          type: 'input',
          label: 'Type',
        },
        {
          name: 'importPath',
          value: '@wrkspce/assistance/e2e/e2e',
          required: true,
          type: 'input',
          label: 'Import Path',
        },
        {
          name: 'generatorScript',
          value:
            'nx g @nx/javascript:library --name=assistance-e2e --bundler=rollup --directory=libs/assistance/e2e/e2e --importPath=@wrkspce/assistance/e2e/e2e --projectNameAndRootFormat=as-provided --publishable=true --tags="scope:assistance, type:e2e" --unitTestRunner=jest',
          required: true,
          type: 'input',
          label: 'Generator Script',
        },
      ],
      dependencies: [
        {
          source: 'assistance-e2e',
          target: 'assistance-app',
          type: 'implicit',
        },
        { source: 'assistance-e2e', target: 'npm:@nx/cypress', type: 'static' },
        { source: 'assistance-e2e', target: 'npm:cypress', type: 'static' },
      ],
    },
    {
      name: 'shared-util',
      configType: 'library',
      fields: [
        {
          name: 'name',
          value: 'shared-util',
          required: true,
          type: 'input',
          label: 'Name',
        },
        {
          name: 'scope',
          value: 'shared',
          required: true,
          type: 'input',
          label: 'Scope',
        },
        {
          name: 'type',
          value: 'util',
          required: true,
          type: 'input',
          label: 'Type',
        },
        {
          name: 'importPath',
          value: '@wrkspce/shared/util/util',
          required: true,
          type: 'input',
          label: 'Import Path',
        },
        {
          name: 'generatorScript',
          value:
            'nx g @nx/javascript:library --name=shared-util --bundler=rollup --directory=libs/shared/util/util --importPath=@wrkspce/shared/util/util --projectNameAndRootFormat=as-provided --publishable=true --tags="scope:shared, type:util" --unitTestRunner=jest',
          required: true,
          type: 'input',
          label: 'Generator Script',
        },
      ],
      dependencies: [
        { source: 'shared-util', target: 'npm:clsx', type: 'static' },
        { source: 'shared-util', target: 'npm:tailwind-merge', type: 'static' },
      ],
    },
    {
      name: 'shared-ui',
      configType: 'library',
      fields: [
        {
          name: 'name',
          value: 'shared-ui',
          required: true,
          type: 'input',
          label: 'Name',
        },
        {
          name: 'scope',
          value: 'shared',
          required: true,
          type: 'input',
          label: 'Scope',
        },
        {
          name: 'type',
          value: 'ui',
          required: true,
          type: 'input',
          label: 'Type',
        },
        {
          name: 'importPath',
          value: '@wrkspce/shared/ui/ui',
          required: true,
          type: 'input',
          label: 'Import Path',
        },
        {
          name: 'generatorScript',
          value:
            'nx g @nx/react:library --name=shared-ui --bundler=rollup --directory=libs/shared/ui/ui --importPath=@wrkspce/shared/ui/ui --projectNameAndRootFormat=as-provided --publishable=true --tags="scope:shared, type:ui" --unitTestRunner=jest',
          required: true,
          type: 'input',
          label: 'Generator Script',
        },
      ],
      dependencies: [
        { source: 'shared-ui', target: 'npm:react', type: 'static' },
        {
          source: 'shared-ui',
          target: 'npm:@radix-ui/react-slot',
          type: 'static',
        },
        {
          source: 'shared-ui',
          target: 'npm:class-variance-authority',
          type: 'static',
        },
        { source: 'shared-ui', target: 'shared-util', type: 'static' },
        { source: 'shared-ui', target: 'npm:next', type: 'static' },
        {
          source: 'shared-ui',
          target: 'npm:@radix-ui/react-label',
          type: 'static',
        },
        { source: 'shared-ui', target: 'npm:@radix-ui/themes', type: 'static' },
        {
          source: 'shared-ui',
          target: 'npm:@radix-ui/react-icons',
          type: 'static',
        },
        {
          source: 'shared-ui',
          target: 'npm:@radix-ui/react-navigation-menu',
          type: 'static',
        },
        {
          source: 'shared-ui',
          target: 'npm:@radix-ui/react-select',
          type: 'static',
        },
        {
          source: 'shared-ui',
          target: 'npm:@radix-ui/react-separator',
          type: 'static',
        },
        {
          source: 'shared-ui',
          target: 'npm:@radix-ui/react-tooltip',
          type: 'static',
        },
        {
          source: 'shared-ui',
          target: 'npm:@testing-library/react',
          type: 'static',
        },
        {
          source: 'shared-ui',
          target: 'npm:@testing-library/jest-dom',
          type: 'static',
        },
        {
          source: 'shared-ui',
          target: 'npm:@testing-library/user-event',
          type: 'static',
        },
      ],
    },
    {
      name: 'workspace',
      configType: 'library',
      fields: [
        {
          name: 'name',
          value: 'workspace',
          required: true,
          type: 'input',
          label: 'Name',
        },
        {
          name: 'scope',
          value: 'workspace',
          required: true,
          type: 'input',
          label: 'Scope',
        },
        { name: 'type', required: true, type: 'input', label: 'Type' },
        {
          name: 'importPath',
          value: '@wrkspce/workspace/undefined/workspace',
          required: true,
          type: 'input',
          label: 'Import Path',
        },
        {
          name: 'generatorScript',
          value:
            'nx g @nx/javascript:library --name=workspace --bundler=rollup --directory=libs/workspace/undefined/workspace --importPath=@wrkspce/workspace/undefined/workspace --projectNameAndRootFormat=as-provided --publishable=true --tags="scope:workspace, type:undefined" --unitTestRunner=jest',
          required: true,
          type: 'input',
          label: 'Generator Script',
        },
      ],
      dependencies: [
        { source: 'workspace', target: 'npm:@nx/jest', type: 'static' },
        { source: 'workspace', target: 'npm:@nx/devkit', type: 'static' },
        {
          source: 'workspace',
          target: 'npm:@radix-ui/react-form',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:@radix-ui/react-icons',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:@radix-ui/react-label',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:@radix-ui/react-navigation-menu',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:@radix-ui/react-select',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:@radix-ui/react-separator',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:@radix-ui/react-slot',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:@radix-ui/react-toast',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:@radix-ui/react-tooltip',
          type: 'static',
        },
        { source: 'workspace', target: 'npm:@radix-ui/themes', type: 'static' },
        {
          source: 'workspace',
          target: 'npm:@vercel/analytics',
          type: 'static',
        },
        { source: 'workspace', target: 'npm:@vercel/kv', type: 'static' },
        { source: 'workspace', target: 'npm:ai', type: 'static' },
        {
          source: 'workspace',
          target: 'npm:class-variance-authority',
          type: 'static',
        },
        { source: 'workspace', target: 'npm:classnames', type: 'static' },
        { source: 'workspace', target: 'npm:clsx', type: 'static' },
        { source: 'workspace', target: 'npm:d3-scale', type: 'static' },
        { source: 'workspace', target: 'npm:date-fns', type: 'static' },
        { source: 'workspace', target: 'npm:geist', type: 'static' },
        { source: 'workspace', target: 'npm:mermaid', type: 'static' },
        { source: 'workspace', target: 'npm:next', type: 'static' },
        { source: 'workspace', target: 'npm:next-themes', type: 'static' },
        { source: 'workspace', target: 'npm:openai', type: 'static' },
        { source: 'workspace', target: 'npm:react', type: 'static' },
        { source: 'workspace', target: 'npm:react-dom', type: 'static' },
        { source: 'workspace', target: 'npm:react-hook-form', type: 'static' },
        {
          source: 'workspace',
          target: 'npm:react-intersection-observer',
          type: 'static',
        },
        { source: 'workspace', target: 'npm:react-mermaid', type: 'static' },
        {
          source: 'workspace',
          target: 'npm:react-textarea-autosize',
          type: 'static',
        },
        { source: 'workspace', target: 'npm:tailwind-merge', type: 'static' },
        {
          source: 'workspace',
          target: 'npm:tailwindcss-animate',
          type: 'static',
        },
        { source: 'workspace', target: 'npm:tslib', type: 'static' },
        { source: 'workspace', target: 'npm:usehooks-ts', type: 'static' },
        { source: 'workspace', target: 'npm:zod', type: 'static' },
        {
          source: 'workspace',
          target: 'npm:zod-to-json-schema',
          type: 'static',
        },
        { source: 'workspace', target: 'npm:@babel/core', type: 'static' },
        {
          source: 'workspace',
          target: 'npm:@babel/preset-react',
          type: 'static',
        },
        { source: 'workspace', target: 'npm:@nx/cypress', type: 'static' },
        { source: 'workspace', target: 'npm:@nx/eslint', type: 'static' },
        {
          source: 'workspace',
          target: 'npm:@nx/eslint-plugin',
          type: 'static',
        },
        { source: 'workspace', target: 'npm:@nx/js', type: 'static' },
        { source: 'workspace', target: 'npm:@nx/next', type: 'static' },
        { source: 'workspace', target: 'npm:@nx/plugin', type: 'static' },
        { source: 'workspace', target: 'npm:@nx/react', type: 'static' },
        { source: 'workspace', target: 'npm:@nx/rollup', type: 'static' },
        { source: 'workspace', target: 'npm:@nx/storybook', type: 'static' },
        { source: 'workspace', target: 'npm:@nx/web', type: 'static' },
        { source: 'workspace', target: 'npm:@nx/workspace', type: 'static' },
        {
          source: 'workspace',
          target: 'npm:@rollup/plugin-url',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:@storybook/addon-essentials',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:@storybook/addon-interactions',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:@storybook/core-server',
          type: 'static',
        },
        { source: 'workspace', target: 'npm:@storybook/jest', type: 'static' },
        { source: 'workspace', target: 'npm:@storybook/react', type: 'static' },
        {
          source: 'workspace',
          target: 'npm:@storybook/react-webpack5',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:@storybook/test-runner',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:@storybook/testing-library',
          type: 'static',
        },
        { source: 'workspace', target: 'npm:@svgr/rollup', type: 'static' },
        {
          source: 'workspace',
          target: 'npm:@swc-node/register',
          type: 'static',
        },
        { source: 'workspace', target: 'npm:@swc/cli', type: 'static' },
        { source: 'workspace', target: 'npm:@swc/core', type: 'static' },
        { source: 'workspace', target: 'npm:@swc/helpers', type: 'static' },
        { source: 'workspace', target: 'npm:@swc/jest', type: 'static' },
        {
          source: 'workspace',
          target: 'npm:@testing-library/jest-dom',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:@testing-library/react',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:@testing-library/user-event',
          type: 'static',
        },
        { source: 'workspace', target: 'npm:@types/d3-scale', type: 'static' },
        { source: 'workspace', target: 'npm:@types/jest', type: 'static' },
        { source: 'workspace', target: 'npm:@types/node', type: 'static' },
        { source: 'workspace', target: 'npm:@types/react', type: 'static' },
        { source: 'workspace', target: 'npm:@types/react-dom', type: 'static' },
        {
          source: 'workspace',
          target: 'npm:@typescript-eslint/eslint-plugin',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:@typescript-eslint/parser',
          type: 'static',
        },
        { source: 'workspace', target: 'npm:autoprefixer', type: 'static' },
        { source: 'workspace', target: 'npm:babel-jest', type: 'static' },
        { source: 'workspace', target: 'npm:core-js', type: 'static' },
        { source: 'workspace', target: 'npm:cypress', type: 'static' },
        { source: 'workspace', target: 'npm:eslint', type: 'static' },
        {
          source: 'workspace',
          target: 'npm:eslint-config-next',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:eslint-config-prettier',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:eslint-plugin-cypress',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:eslint-plugin-import',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:eslint-plugin-jsx-a11y',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:eslint-plugin-react',
          type: 'static',
        },
        {
          source: 'workspace',
          target: 'npm:eslint-plugin-react-hooks',
          type: 'static',
        },
        { source: 'workspace', target: 'npm:jest', type: 'static' },
        {
          source: 'workspace',
          target: 'npm:jest-environment-jsdom',
          type: 'static',
        },
        { source: 'workspace', target: 'npm:nx', type: 'static' },
        { source: 'workspace', target: 'npm:postcss', type: 'static' },
        { source: 'workspace', target: 'npm:prettier', type: 'static' },
        { source: 'workspace', target: 'npm:radix-themes-tw', type: 'static' },
        { source: 'workspace', target: 'npm:storybook', type: 'static' },
        { source: 'workspace', target: 'npm:swc-loader', type: 'static' },
        { source: 'workspace', target: 'npm:tailwindcss', type: 'static' },
        { source: 'workspace', target: 'npm:ts-jest', type: 'static' },
        { source: 'workspace', target: 'npm:ts-node', type: 'static' },
        { source: 'workspace', target: 'npm:typescript', type: 'static' },
        { source: 'workspace', target: 'npm:verdaccio', type: 'static' },
      ],
    },
  ],
};

const generator =
  "async function workspaceConfigurationGenerator(tree) {\n    const workspaceName = 'wrkspce';\n    const projects = (0, _devkit.readCachedProjectGraph)().nodes;\n    const { dependencies } = (0, _devkit.readCachedProjectGraph)();\n    const projectNames = Object.keys(projects);\n    const configuraton = {\n        name: '@wrkspce',\n        configType: 'workspace',\n        children: projectNames.map((projectName)=>{\n            const project = projects[projectName];\n            const projectDependencies = dependencies[projectName];\n            const projectScope = projectName.split('-')[0];\n            const projectType = projectName.split('-')[1];\n            const configType = project.type;\n            const importPath = `@${workspaceName}/${projectScope}/${projectType}/${projectName.split('-').pop()}`;\n            const generatorScript = `nx g @nx/${projectType === 'ui' ? 'react:library' : projectType === 'feature' ? 'next:library' : projectType === 'app' ? 'next:application' : 'javascript:library'} --name=${projectName} --bundler=rollup --directory=libs/${projectScope}/${projectType}/${projectName.split('-').pop()} --importPath=${importPath} --projectNameAndRootFormat=as-provided --publishable=true --tags=\"scope:${projectScope}, type:${projectType}\" --unitTestRunner=jest`;\n            return {\n                name: projectName,\n                configType: configType === 'app' ? 'app' : 'library',\n                fields: [\n                    {\n                        name: 'name',\n                        value: projectName,\n                        required: true,\n                        type: 'input',\n                        label: 'Name'\n                    },\n                    {\n                        name: 'scope',\n                        value: projectScope,\n                        required: true,\n                        type: 'input',\n                        label: 'Scope'\n                    },\n                    {\n                        name: 'type',\n                        value: projectType,\n                        required: true,\n                        type: 'input',\n                        label: 'Type'\n                    },\n                    {\n                        name: 'importPath',\n                        value: importPath,\n                        required: true,\n                        type: 'input',\n                        label: 'Import Path'\n                    },\n                    {\n                        name: 'generatorScript',\n                        value: generatorScript,\n                        required: true,\n                        type: 'input',\n                        label: 'Generator Script'\n                    }\n                ],\n                dependencies: projectDependencies\n            };\n        })\n    };\n    console.log(configuraton);\n    const templatePath = _path.join(__dirname, 'files/src');\n    (0, _devkit.generateFiles)(tree, templatePath, 'libs/assistance/plugin/src/generators/files/output', {\n        config: configuraton,\n        generator: workspaceConfigurationGenerator.toString()\n    });\n    await (0, _devkit.formatFiles)(tree);\n}";
